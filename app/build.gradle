plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.android.currencyconverter"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "string", "openexchangerates_api_key", "6fc373bdcd43eebe96a6943719b5467e"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

ext {
    app_compat_version = '1.3.0'
    constraint_layout_version = '2.0.4'
    material_version = '1.4.0'
    ktx_core_version = '1.6.0'
    hilt_version = '2.28-alpha'
    hilt_viewmodel_version = '1.0.0-alpha02'
    lifecycle_version = '2.3.1'
    moshi_version = '1.11.0'
    retrofit_converter_moshi_version = '2.9.0'
    retrofit_version = '2.9.0'
    room_version = '2.3.0'
    coroutines_version = '1.3.9'
    mockk_version = '1.10.2'
    truth_version = '1.1'
    espresso_core_version = '3.4.0'
    robolectric_version = '4.4'
    ext_junit_version = '1.1.3'
    test_core_version = '1.0.0'
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$ktx_core_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    // test
    testImplementation 'junit:junit:4.+'
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "com.google.truth:truth:$truth_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "androidx.test:core:$test_core_version"

    // android test
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodel_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_viewmodel_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"


    // Moshi
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_converter_moshi_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
}